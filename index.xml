<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>My Quartz Vault on</title><link>https://agsup.github.io/quartz/</link><description>Recent content in My Quartz Vault on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://agsup.github.io/quartz/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://agsup.github.io/quartz/notes/Chapter-13-Personality/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Chapter-13-Personality/</guid><description>Chapter 13: Personality Check [[PSY 2010 Ch. 13 Notes.docx]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Chapter-14-Elements-of-Chemistry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Chapter-14-Elements-of-Chemistry/</guid><description>Elements of Chemistry Physical and Chemical Properties Physical Properties: properties of a material that can be changed without altering the material&amp;rsquo;s chemistry Ex.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Chapter-14-Psychological-Disorders/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Chapter-14-Psychological-Disorders/</guid><description>Chapter 14: Psychological Disorders 14-1. Discuss how we draw the line between normality and disorder Psychological Disorders Clinically significant disturbance in an individual’s cognition, emotion regulation, or behavior (APA, 2013) Thoughts, emotions, or behaviors are dysfunctional or maladaptive Often accompanied by distress 14-2.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Chapter-15-Atomic-Structure-and-Atomic-Bonds/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Chapter-15-Atomic-Structure-and-Atomic-Bonds/</guid><description>#PhysicalScience
Atomic Structure and Atomic Bonds 1. Electron-Dot Structures pictured [[FP08LXCnTNK39AwhobDS_electron-dot-diagram-for-oxygen-excellent-design.png|here]] Number of Rings = Number of Rows on Periodic Table Number of Electrons = Orbital Number (referenced [[4-11 (Elements)#Orbital Notation|here]]) Lewis Dot Structure: a diagram that shows the valence electrons of an element Only the electrons in the outermost ring of an Electron-Dot Structure Only for first two and last six columns of the Periodic Table (not the transition metals) Order is important: Add electrons clockwise Octet Rule: All atoms want full valence rings Family 1 has 1 valence electron, so is charged +1 Family 2 is charged +2, 3 is +3, 4 is +4, 5 is -3, 6 is -2, and 7 is -1 8 is noble gases, so they don&amp;rsquo;t bond with anything With the charge values, it is relative to full valence = 0 2.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Abstract-Classes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Abstract-Classes/</guid><description>#OOP
Have a root object type that can only be truly used as more specific types Ex. Shape abstract class has derived classes Square and Circle You cannot use the Shape class itself, doesn&amp;rsquo;t make any sense Virtual Method ^fa89f3 If a class has a v-table, it is a polymorphic type ^e4a32a Note: a polymorphic type should always have a virtual destructor A virtual method is pure if it has no code in it ^4e6ace Note: a class with a pure virtual method in it is by definition an abstract class You can point to an abstract class ^7c273a This means that you can have a pointer that can symbolize any of the children of the base class Ex.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Ad-hoc-Polymorphism/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Ad-hoc-Polymorphism/</guid><description>#OOP
Add new functionality for different types as you need them function overloading operator overloading</description></item><item><title/><link>https://agsup.github.io/quartz/notes/American-Government/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/American-Government/</guid><description>American Government #AMGov
[[American Symbology]] [[Political Science]] [[The Constitution]] [[Laws]] [[Congress]] TODO: Email lklein@harding.edu for study group business</description></item><item><title/><link>https://agsup.github.io/quartz/notes/American-Symbology/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/American-Symbology/</guid><description>American Symbology What we choose to represent us to the rest of the world #AMGov Common Symbols E Pluribus Unum Out of many, one Bald Eagle They go wherever they want (represents freedom) Personal note: can also represent hubris/pushiness/predatorial Log Cabin Made of wilderness Built from nothing Represents adaptability Also represents pushing the frontier Sometimes at the cost of others Uncle Sam Wants you to join the military Represents American strength/military Occasionally represents &amp;ldquo;friendliness&amp;rdquo; (as much as can come from the military) Liberty Bell Broken bell because we rang it too much after winning the Revolutionary War We keep it as a symbol of our love for liberty Statue of Liberty Gift from France Symbol of immigration Inscription: Give me your tired, your poor, Your huddled masses yearning to breathe free,</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Article-Reflections-for-Quizzes-1-and-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Article-Reflections-for-Quizzes-1-and-2/</guid><description>Article Reflections for Quizzes 1 and 2 Quiz 1 The Living God is a Missionary God Before reading this article, I had not really thought about the connection between spreading the gospel across the world to God&amp;rsquo;s promise to Abraham.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Bible-Exam-Unit-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Bible-Exam-Unit-3/</guid><description>Q1 Joshua: Describe in what ways the conquest of Canaan was complete, what ways it was incomplete, and how Christians might explain this violence in the OT.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Bible/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Bible/</guid><description>David had many very positive contributions to Israel. Repeatedly in 2nd Samuel, it is said that David brought great military victories.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Circuits-Final/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Circuits-Final/</guid><description>Definitions to know: Charge The innate property of atoms Measured in Coulombs (SI Unit) Current Charge in Motion Measured in Amperes ($i=\frac{\Delta q}{\Delta t}$) ($A$) Voltage Potential energy difference per unit charge Measured in Volts ($V=\frac{\Delta W}{\Delta q}$) ($V$) Resistance Opposition to flow of electrons Measured in Ohms ($R = \rho \frac{L}{A}$) ($\Omega$) Capacitance 2 plates separated by an insulator, stores energy in its electric field Measured in Farads ($C = \Sigma \frac{A}{d}$) ($F$) Inductance Coil of wires that stores energy in a magnetic field Measured in Henrys ($H$) Ground O potential (OV) Circuit Source, Load, and a path between them Op Amp Voltage at inputs is equal No current enters Allows arcane secret resistor math (see [[Op Amps]]) Problem Types: Mesh Supermesh Nodal RLC Op Amps RC and/or RL AC Filters Definition Super Secret Bonus Choice (wowie) Choose not to do 1 of any</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Circuits-I/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Circuits-I/</guid><description>#Circuits #Fall2022
[[Solving RLC Circuits]] [[Sinusoids and Phasors]] [[Op Amps|What the HECK are Op Amps anyway!?!]] [[Frequency Response]] [[Motor Control With Transistors]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/circuitsproblem128450943/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/circuitsproblem128450943/</guid><description>Circuits Problem $2x-2j(x-y)+8(x-z)=60\angle-30\degree$ $4y-6j(y-z)-2j(y-x)=0$ $10z+8(z-x)+6j(z-y)=0$ RREF this Sys of Equations $x=?$ $y=?$ $z=?$</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Classwork4142022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Classwork4142022/</guid><description>#ArchAssembly
A B C OUT 0 0 0 1 0 0 1 0 0 1 0 1 0 1 1 0 1 0 0 1 1 0 1 0 1 1 0 1 1 1 1 0 What boolean expression is equivalent to this truth table?</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Comp-3450-Exam-3-Review/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Comp-3450-Exam-3-Review/</guid><description>#OOP
Things to know: Signatures for operators 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 bool operator == (Fee lhs, Fum rhs); // this has to be outside of the class class Fee { // Conversions Fee (Fum fum); // Fum -&amp;gt; Fee Fee operator(Fum); // Fee -&amp;gt; Fum // Methods Fee operator +(Fee rhs) const; Fee operator -(Fee rhs) const; Fee operator +(Fum rhs) const; Fee operator -(Fum rhs) const; Fee&amp;amp; operator += (Fee src); Fee&amp;amp; operator -= (Fee src); Fee&amp;amp; operator += (Fum src); Fee&amp;amp; operator -= (Fum src); Fee&amp;amp; operator++(); // prefix Fee operator++(int); // postfix } // These are required to be outside the flass std::ostream&amp;amp; operator &amp;lt;&amp;lt; (std::ostream&amp;amp; out, Fee rhs); // not referernce because Fee is being read std::istream&amp;amp; operator &amp;gt;&amp;gt; (std::istream&amp;amp; in, Fee&amp;amp; rhs); // reference because Fee is being modified Ordering Strong Ordering Greater than, Less than, Equal to Weak Ordering Also includes Equivalence (value is same but not equal objects) Partial Ordering Accounts for unsortables (like NaN) Spaceship (&amp;lt;=&amp;gt;) Takes place of lt, gt, lte, gte, but NOT equality Default implementation (for equals as well) is lexicographical (Looks through each part to determine equality/inequality ordering) Know difference between implicit/explicit conversions Rule of thumb: if it looks like a constructor call or a typecast, it is an explicit conversion If it looks like it should require uniform type, but accepts it anyway, it is implicit Copying/Moving Copy L-Values, Move R-Values std::move() Makes its argument an R-val std::swap() Easy way of moving x to temp, y to x, temp to y You only get a default move if you don&amp;rsquo;t write any of the other &amp;ldquo;Gang of 5&amp;rdquo; functions, which are&amp;hellip; Move constructor Copy constructor Move assignment Copy assignment Destructor Differentiating L and R values Can you access this exact thing again?</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Comp-3450-Exam-4-Review/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Comp-3450-Exam-4-Review/</guid><description>#OOP
[[Polymorphism]] [[Run-Time Type Information (RTTI)|RTTI]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Congress/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Congress/</guid><description>Congress! #AMGov
OUR legislative branch They work for us! How a Bill becomes a Law Same bill has to pass the house and the senate, then it is approved by the President Bill must be introduced by a member of Congress Bill Drafting makes sure the language is perfectly detailed Committee reports bill out to another committee or to one of the two Houses Bill is then placed on a calendar (list of bills to be read and voted on) House Rules Committee sets the rules for consideration 1 hour is indicative of a big decision, and is the maximum allocated time Filibustering is a thing that exists, and it&amp;rsquo;s stupid Conference committee works out the differences between the bills passed by HOR and Senate President then can sign it or veto it If it is vetoed, the it returns to the house of origin and the process restarts Or there can be a veto override, but with a partisan government, no way.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Constitution-Study-Guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Constitution-Study-Guide/</guid><description>Constitution Study Guide Word Pairs Power/Authority Power = Strength, Authority = right Issues/Politics Laswell&amp;rsquo;s/Lenin&amp;rsquo;s definition of politics Laswell = authority, Lenin = power Cost/Benefit Not always monetary or immediate How to value prevention?</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Ehud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Ehud/</guid><description>Ehud Israelites did evil Moabite King Eglon takes over Ehud is deliverer (judge) Ehud comes to deliver &amp;ldquo;secret message from God&amp;rdquo; (stabs) King is dead, Ehud runs away, doors are locked Servants wait to open door because they believe king is relieving himself Unlock door, find king dead</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Example-Code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Example-Code/</guid><description>1 2 3 4 5 6 7 8 void teachClass(Teacher* teacher); void assignJob(Person* person) { if (person-&amp;gt;name == &amp;#34;Gabriel Foust&amp;#34;) { // What else could he be but a teacher?</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Fall-2022-Finals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Fall-2022-Finals/</guid><description> Class Day Time Oral Comm Monday 10:30 AM Circuits Monday 1:00 PM Bible Monday 3:30 PM Web Dev Wednesday 1:00 PM OOP Thursday 10:30 AM</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Fall-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Fall-2022/</guid><description>#Fall2022
[[OOP|Object Oriented Programming]] [[Web Development]] [[Circuits I]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Federalism/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Federalism/</guid><description/></item><item><title/><link>https://agsup.github.io/quartz/notes/Final-Study-Guide-Data-Structures/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Final-Study-Guide-Data-Structures/</guid><description>#Finals
Comp 2450 – Data Structures Final Exam – Study Guide Spring 2022 Exam time: Monday, Apr 2, 10:30 – 12:30 Objective section (30-40 questions from previous tests – don’t expect verbatim questions – focus on the knowledge that you need to know in the question.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Final-Study-Guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Final-Study-Guide/</guid><description>#Psychology
Note: this test will only be the end of [[(Chapter 13) Personality|Chapter 13]] (starting at the Narcissism chapter) and the entirety of [[(Chapter 14) Psychological Disorders|Chapter 14]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Flip-Classroom/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Flip-Classroom/</guid><description>Flip Classroom The Bible saying it is &amp;ldquo;Inspired by God&amp;rdquo; I think means that it is written with God in mind.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Frequency-Response/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Frequency-Response/</guid><description>#Circuits
Op Amps and Capacitors</description></item><item><title/><link>https://agsup.github.io/quartz/notes/github-dns-stuff/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/github-dns-stuff/</guid><description>Create a TXT record in your DNS configuration for the following hostname: _github-pages-challenge-agsup.notes.agsup.io Use this code for the value of the TXT record: 978265e3f2ebd1a0d2850061c5d48a Wait until your DNS configuration changes.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Hash-Tables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Hash-Tables/</guid><description>#DataStructures
Hash Tables Consists of buckets that contain values, and can be accessed using a hash function One of the most common of these is a modulo hash function This enables hash tables to be used as an excellent searching structure If you can do filter the thing you&amp;rsquo;re searching by, then you can easily find it in the table Ex.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/How-to-Raise-a-Fool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/How-to-Raise-a-Fool/</guid><description>How to Raise a Fool #Wisdom/Prophets
Who is the Fool? Faulty definitions Inept but lucky Gullible yet sincere Blundering but lovable Under this definition, &amp;ldquo;foolishness&amp;rdquo; is not a tragic flaw or sin A true fool fails to appreciate the concern of the wise and the warning of Jesus Becoming this kind of fool is a subtle, four-stage process Stage 1: Isolated Acts of Folly Everyone starts off as a simple/naive child Potential for both wisdom and folly are possible Isolated acts of Folly: Easily angered (14:17) Self-trusting Fighter (20:3) Reckless Undependable (26:6) Doesn&amp;rsquo;t care Quickly consuming income (21:20) Lacks focus Incessant Talking (12:23; 17:28) Failing to control speech Parents are responsible for preventing this To raise a fool, do nothing Teaching a child grants them wisdom Stage 2: Folly as Sport Disregarding discipline Repeating foolish behavior Enjoying folly Stage 3: Beyond Correction Hates the idea of knowledge 2 Factors Thinks they&amp;rsquo;re right Always takes the path of least resistance (fast money, short-term gain, etc.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/HW-10-LED/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/HW-10-LED/</guid><description>#ArchAssembly
An application of Karnaugh Maps A digital circuit is needed to control a seven-segment LED display of decimal digits, as shown below.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/hw1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/hw1/</guid><description>#ArchAssembly Boolean 0
Find Boolean expressions that are equivalent to the following logic diagrams. DO NOT SIMPLIFY! a. F = (A + B) × B b.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Important-Library-Classes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Important-Library-Classes/</guid><description>java.lang Most of the classes in the list are in this package This package doesn&amp;rsquo;t have to be imported Object Base class to all classes (every class you make inherits from it) Methods defined in this class are in all classes Base methods public boolean equals( Object obj ) – do two objects have equal values?</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Inheritance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Inheritance/</guid><description>#OOP
Inheritance is Abstraction, but extended Features of Inheritance Generalize a group of related classes Ex. Imagine classes for Student, Faculty, Staff Abstraction allows one blueprint for all three Implementation: For a Person blueprint, Student is a more specific type of Person with extra fields, Employees are a specific type of Person, Faculty is a specific type of Employee, etc.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Intro/</guid><description>#OOP
Main focus is neat programs, not necessarily complex programs Object Oriented Programming is just a tool that aids with this goal Topics: abstraction and encapsulation modules exception handling classes and methods regular types and value semantics operator overloading polymorphism templates single and multiple inheritance interfaces co- and contravariant types</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Java-Objects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Java-Objects/</guid><description>#OOP
Objects have reference semantics Every class object behaves as if it is a C++ reference Ex. Two variables can &amp;ldquo;point&amp;rdquo; to the same object Equality (==) compares identity, not value Primitive types have value semantics No const objects in Java Can declare final, just means var cannot be changed Same as a const-ref in C++ Classes Fields and methods Written identically to C++ Cannot separate interface and implementation in Java Static methods can only call other static methods Method Overloading Just like C++ this pointer Same as C++ (used implicitly for members) Points to the object on which the method was invoked Note: -&amp;gt; does not exist, everything uses .</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Java/</guid><description>#OOP
Everything is a class Packages Default visibility is &amp;ldquo;package private&amp;rdquo; [[Java Objects]] [[Important Library Classes]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/John-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/John-1/</guid><description/></item><item><title/><link>https://agsup.github.io/quartz/notes/Kahoot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Kahoot/</guid><description>#Psychology</description></item><item><title/><link>https://agsup.github.io/quartz/notes/key/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/key/</guid><description> F? C G M? J I? L K M? F? J A L E D D K E B D E F B</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Kings-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Kings-1/</guid><description>Kings 1 Theme: Solomon Topic: Overly Committed David Appoints Solomon (1-2) David ruled for 40 years He is feeble (old age/Abishag, slightly senile), so son Adonijah exalts himself (horses, chariots, 50 runners) Note: Abishag is a woman who &amp;ldquo;sleeps next to&amp;rdquo; (does not have sex with) David Nathan and Bathsheba &amp;ldquo;remind&amp;rdquo; him that he chose Solomon to be king, so David installs Solomon as acting King David&amp;rsquo;s instructions to Solomon Obey God Judge my Enemies Solomon &amp;ldquo;cleans house&amp;rdquo; (gets rid of Adonijah, Abiathar, Joab and Shimei) Solomon&amp;rsquo;s Wisdom and Wealth (3-4, 10) Divine Dream God grants Solomon a wish Solomon asks for a discerning mind God blesses Solomon not only with wisdom, but also with affluence (wealth, honor, potential long life) Proves his wisdom through dilemmas (2 prostitutes, 1 child, test to reveal the true mother) &amp;ldquo;Cut the baby in half!</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Laws/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Laws/</guid><description>Laws Three types of Laws Constitutional Statutory Common/Judge Made &amp;ldquo;Kindergarten&amp;rdquo; rules Precedent: What happened previously is important Judges follow previous decisions Judges can overturn rulings if necessary Stare Decisis: Standing on decided cases The powers given to the judicial branch in Article III are&amp;hellip; tiny.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/link/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/link/</guid><description/></item><item><title/><link>https://agsup.github.io/quartz/notes/Loan-Stuff/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Loan-Stuff/</guid><description>Parent PLUS Origination Fee Fee for getting the loan Federal Get around 3000 (send back extra) Maybe double that to cover Spring</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Maps-and-Graphs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Maps-and-Graphs/</guid><description>#DataStructures
Maps and Graphs Maps About Maps Similar to a [[Sets|Set]] A Map is a Pair of (Key and Value) Key is the ordering element Side-Note: Multi-Sets Similar to a set, but doesn&amp;rsquo;t require keys to be unique Multi-Maps Similar to a Multi-Set, allows duplicate values per key Graphs About Graphs A set of points connected by lines The ADT is nodes/vertices connected by edges A Tree is a type of graph but, a graph is not always a tree A tree is a subset of a graph Abstract View Trees impose a hierarchical view of data while trees have no such hierarchy Note: The Obsidian Graph View is a literal graph, which is not necessarily a tree Terminology Directedness Undirected: Edges go in both directions Directed: Edges go in one direction Note: While able to be backtracked through graphical view or by alt + ←, Obsidian&amp;rsquo;s Graph is a directed graph Connectedness Connected: Every node is reachable by every other node Disconnected: Not every node is reachable by every other node Completeness Every node is directly connected to every other node If implemented in a networking setup, it would be very fast, but very expensive Other terms Weighted Each edge is given a weight, which can represent any number of things Ex.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Motor-Control-With-Transistors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Motor-Control-With-Transistors/</guid><description>A Transistor is a Digital Switch CMOS Digital Transistors Has three terminals Source (Input power) Gate (control voltage) Drain (output) 2 Types PMOS (Positive) Doped (has impurities injected) to be a PNP Junction in silicon Closes when gate = 0 NMOS (Negative) Inversion of the PMOS Doped to be an NPN Junction Closes when gate = 1 H-Bridge with Transistors Transistors in a rectangle around a motor Different configurations of transistor states make positive or negative charge through the motor, resulting in a clockwise/counterclockwise motion !</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Notes-on-Sleep-Oral-Comm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Notes-on-Sleep-Oral-Comm/</guid><description>#archive/useless
How can students reduce stress through health and wellness? Sources Secondary source: Positive effects of sleep on the body (NIH) Merrill Mitler: sleep expert and neuroscientist at the National Institute of Health Quote 1 from Dr.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/OOP/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/OOP/</guid><description>#OOP #Fall2022
[[Intro]] [[Comp 3450 Exam 3 Review|Unit 3: Operator Overloading]] [[Comp 3450 Exam 4 Review|Unit 4: Polymorphism]] [[Java|Unit 5: Java]] [[README&amp;rsquo;s]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/OOSE-1.1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/OOSE-1.1/</guid><description>1.1: Historical Aspects #SoftwareEngineering
1967: NATO study group coins term software engineering Claim: Building software is similar to other engineering tasks The Software Crisis Software quality was unacceptably low Deadlines/budgets were not being met Terrible because software is expensive to build Statistics: 18% cancelled 53% completed late/overbudget/missing features 29% success 78% of IT organizations have &amp;ldquo;been involved in disuptes that ended in litigation&amp;rdquo; 67% of those cases were because of poorly functioning/performing products 56% of those cases were because of shifting deadlines 45% of those cases were so severe that the product was unusable</description></item><item><title/><link>https://agsup.github.io/quartz/notes/OOSE-1.10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/OOSE-1.10/</guid><description>#SoftwareEngineering</description></item><item><title/><link>https://agsup.github.io/quartz/notes/OOSE-1.11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/OOSE-1.11/</guid><description>#SoftwareEngineering</description></item><item><title/><link>https://agsup.github.io/quartz/notes/OOSE-1.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/OOSE-1.2/</guid><description>1.2: Economic Aspects #SoftwareEngineering
Essentially, coding is such a small percentage of the time/cost that if a new coding technique can be produced 10% than an old one, it is still often more profitable to use the old method because of the time/money cost of learning the new technique</description></item><item><title/><link>https://agsup.github.io/quartz/notes/OOSE-1.3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/OOSE-1.3/</guid><description>1.3: Maintenance Aspects #SoftwareEngineering
Life-Cycle Model A description of steps to take when building a software product Model is broken into phases, the number of which vary between models Life-Cycle Steps from concept to retirement of a product Until late 70&amp;rsquo;s Waterfall was the leading model 6 phases: Requirements phase Concept exploration/refinement Analysis (specification) phase Requirements are broken down into specifications, a plan is drawn up Design phase 2 design processes Architectural Design Product is broken down into modules Detailed Design Each module is broken down into more specific instruction/specifications These processes result in design documents.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/OOSE-1.4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/OOSE-1.4/</guid><description>1.4: Requirements, Analysis, and Design Aspects #SoftwareEngineering</description></item><item><title/><link>https://agsup.github.io/quartz/notes/OOSE-1.5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/OOSE-1.5/</guid><description>#SoftwareEngineering</description></item><item><title/><link>https://agsup.github.io/quartz/notes/OOSE-1.6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/OOSE-1.6/</guid><description>#SoftwareEngineering</description></item><item><title/><link>https://agsup.github.io/quartz/notes/OOSE-1.7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/OOSE-1.7/</guid><description>#SoftwareEngineering</description></item><item><title/><link>https://agsup.github.io/quartz/notes/OOSE-1.8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/OOSE-1.8/</guid><description>#SoftwareEngineering</description></item><item><title/><link>https://agsup.github.io/quartz/notes/OOSE-1.9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/OOSE-1.9/</guid><description>#SoftwareEngineering</description></item><item><title/><link>https://agsup.github.io/quartz/notes/OOSE-Chapter-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/OOSE-Chapter-1/</guid><description>Chapter 1: Introduction to Object Oriented Software Engineering #SoftwareEngineering
[[OOSE 1.1|1.1: Historical Aspects]] [[OOSE 1.2|1.2: Economic Aspects]] [[OOSE 1.3|1.3: Maintenance Aspects]] [[OOSE 1.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/OOSE-Notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/OOSE-Notes/</guid><description>Object Oriented Software Engineering Notes #SoftwareEngineering
[[OOSE Chapter 1|Chapter 1: Introduction to Object Oriented Software Engineering]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Op-Amps-+-Capacitors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Op-Amps-+-Capacitors/</guid><description>#Circuits
[[Op Amps]]
Low Pass Filter: Active Formula: $V_0 = -\frac{Zf}{R_{in}}V_{in}$ Note: $V_0$ is inverting $Z_f = \frac{R_f}{R_f\cdot j \cdot \omega \cdot C_f + 1}$ So, $V_0= -\frac{R_f}{R_{in}}(\frac{1}{R_f\cdot j \cdot \omega \cdot C_f + 1})V_{in}$ High Pass Filter: Active Formula: $V_0 = -\frac{Rf}{Z_{in}}V_{in}$ $Z_{in} = R_{in} + \frac{1}{j\omega c} = \frac{R_{in} \cdot j\cdot \omega \cdot C + 1}{j\omega c}$ So, $V_0 = -\frac{Rf \cdot j\cdot \omega\cdot C_{in}}{R_{in}\cdot j\cdot \omega\cdot C_{in} + 1}V_{in}$ Capacitors are used to smooth out voltages Exponential PWM output Pulse Width Modulation if analogWrite(3, 128) (arg 1 is a pin#, arg 2 is an 8 bit val), then wave is a square wave analogWrite(3, 64) would be a 25% duty cycle This can produce smoother (sinusoidal) waves if the output is run through a resistor, then split between a new output and a capacitor (capacitor goes to ground) Resistance has to be a specific value, which needs to be calculated $fc = \frac{1}{2\pi RC}$</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Op-Amps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Op-Amps/</guid><description>Enable Math Operators on signals in the analog domain 2 Rules: Voltage diff between inputs is 0 No current flowing through either input 5 Types: Inverting Amplifier: $V_b = \frac{-Rf}{R_{in}}V_{in}$ Summer: $V_0 = \frac{-Rf}{R_1}V_1 + \frac{-Rf}{R_2}V_2 + {&amp;hellip;}$ TODO: fill in the other type of Op Amp Circuits [[Op Amps + Capacitors]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Parametric-Polymorphism/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Parametric-Polymorphism/</guid><description>#OOP
Templates (think template &amp;lt;typename T&amp;gt;) Note: templates are not code. It is a template for code Templates give as many classes as there are compatible types This implementation should go in the header file none of it can go in the source file because of the nature of template syntax/scope</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Periodic-Table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Periodic-Table/</guid><description>#PhysicalScience
-webkit-transform: scale(0.50); -webkit-transform-origin: 0 0; &amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt;</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Political-Science/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Political-Science/</guid><description>Political Science #AMGov The study of those relationships involving power and authority, especially those including government From the Text Issues: A conflict, real or apparent, between the interests, ideas, or beliefs of different citizens Politics: The activity by which an issue is agitated or settled Cost: A burden that people believe they must bear if a policy is adopted Note: This is more than just monetary cost Benefit: A satisfaction that people believe they will enjoy of a policy is adopted Definitions Politics ^3f3c23 Who gets what, when and how According to Lenin, &amp;ldquo;who could do what to whom&amp;rdquo; Power ^c2c71d Possession of control over others [[#^3f3c23|Politics]] is the pursuit and exercise of power From the text: &amp;ldquo;The ability of one person to get another person to act in accordance with the first person&amp;rsquo;s intentions&amp;rdquo; The ability to influence another&amp;rsquo;s behavior [[#^c2c71d|Power]], like money, is a means to other ends Democracy Rule by the people Derived from Greek words $demos$ (the people) and $kratos$ (authority) Made the framers nervous (implies mob rule) Writings of &amp;ldquo;Publius&amp;rdquo; Dangerous, turbulent, chaotic Direct and Indirect Democracy Direct is akin to mob rule Indirect is akin to a Republic Greek&amp;rsquo;s three legitimate governments Monarchy Could turn to despotism Aristocracy Could turn to oligarchy Democracy Could turn to mob rule They did not accept tyranny With very small amounts of people, Limited Direct Democracy is acceptable People are directly able to execute: Initiative Referendum Recall Republic Form of government where the governed have sovereignty and [[#^c2c71d|power]], but that power is channeled through representatives who run the government Ability to vote for the representatives is given to the citizens This form of government is guaranteed in the US Government People/institutions/processes in which rules are made and where [[#^c2c71d|power]] to enforce them is possessed Regulates the use of legitimate force (see [[#^7d6965|authority]]) Authority ^7d6965 The right to use power &amp;ldquo;Legitimate&amp;rdquo; power &amp;ldquo;Leg&amp;rdquo; prefix is in legal, legislative, legible, etc.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Polymorphism/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Polymorphism/</guid><description>#OOP
Same code does different things for different types Core Mechanics [[Inheritance]] [[Abstract Classes]] Types of Polymorphism [[Ad-hoc Polymorphism]] [[Subtype Polymorphism]] [[Parametric Polymorphism]] Things to remember Remember difference between [[Inheritance#^2e545c|&amp;ldquo;is-a&amp;rdquo; and &amp;ldquo;has-a&amp;rdquo;]] Base class: parent Derived class: child [[Inheritance#^7da4d1|Protected visibility]] Note: Review [[Inheritance#^bf9d78|types of inheritance]] [[Inheritance#^96a5ee|Order of Construction/Destruction]] When a base class and derived class both have identically named members, it is called [[Inheritance#^b7d12f|hiding]] Note: Overriding is a different situation Overriding is replacing a function in the base class with an identically named function in the base class The main difference is that the signature of the overriding function is identical to the base class function Definition of a [[Abstract Classes#^e4a32a|polymorphic type]] [[Abstract Classes#^4e6ace|Pure virtual methods]] [[Abstract Classes#^7c273a|Abstract type pointers]] It is generally UNSAFE to cast a base class object to a derived class object It is generally SAFE to cast a derived class object to a base class object See [[Inheritance]] Also see static_cast vs dynamic_cast You can inherit from many classes simultaneously Comma-delimited list Ex.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Psychology/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Psychology/</guid><description>#Psychology
[[(Chapter 13) Personality]] [[(Chapter 14) Psychological Disorders]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/READMEs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/READMEs/</guid><description>#OOP
[[README]] [[README2]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/README/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/README/</guid><description>#OOP
Comp 3450 Project 1: Hangman Greg Supratman In this project, I developed a hangman game using modular design StackOverflow was used (sparingly) to refresh my brain on concepts from last semester This project has no error checking, which I would fix if I had more time, but as this was not a requirement for the project, I decided not to implement it.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/README2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/README2/</guid><description>#OOP
Comp 3450: Project 2 Greg Supratman External resources: Your project design doc @ cs.harding.edu https://cs.uwaterloo.ca/~alopez-o/math-faq/node73.html (Weekday Formula) I feel fine with the outcome of my project, though I would like to figure out how to better integrate GoogleTest with CMake/CTest.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Resume-Review-Workshop-Notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Resume-Review-Workshop-Notes/</guid><description>#misc
Details 52 companies at the fair (on Handshake) Resume is due by tomorrow (9/2) for the fair (9/8) What to include on a resume Education list if higher than 3.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Run-Time-Type-Information-RTTI/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Run-Time-Type-Information-RTTI/</guid><description>#OOP
Extra Information added to the object so we can tell its type at run-time Kind of misses the point of Polymorphism, but is sometimes necessary Only available if class is a [[Abstract Classes#^fa89f3|Polymorphic Type]] Better to write code that doesn&amp;rsquo;t care about its type The typeid operator The type_info object is used to uniquely identify a type Defined in &amp;lt;typeinfo&amp;gt; header Cannot be moved/copied Contains name of class purely for debug purposes Overloads =/!</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Semester-Test-Schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Semester-Test-Schedule/</guid><description>#Finals
Mon Tues Wed Thurs Fri 10:30 AM-12:30 PM: [[Data Structures]] 8-10 AM: [[Psychology]] 8-10 AM: A&amp;amp;A 8-10 AM: Wellness 8:30 PM: Bible 1-3 PM: [[Physical Science]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Sinusoids-and-Phasors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Sinusoids-and-Phasors/</guid><description>#Circuits
Allows analysis of all RLC Circuits in an easy manner No integrals or derivatives (yay!) Visual: !</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Software-Engineering-Exam-1-Study-Guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Software-Engineering-Exam-1-Study-Guide/</guid><description>Exam 1 Study Guide #SoftwareEngineering
Define Software Engineering. A good definition is this one from Wikipedia: “The discipline of software engineering encompasses knowledge, tools, and methods for defining software requirements, and performing software design, software construction, software testing, and software maintenance tasks.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Software-Engineering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Software-Engineering/</guid><description>Software Engineering #SoftwareEngineering
[[OOSE Notes]] [[Software Engineering Exam 1 Study Guide]] [[]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Solving-RLC-Circuits/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Solving-RLC-Circuits/</guid><description>#Circuits
Step 3: Find $\omega_0, \alpha, s_1, s_2$ $\omega_0=\frac{1}{\sqrt{LC}}$ If type is Source Free or Step Response: $\alpha=\frac{R}{2L}$ If type is Source-Free Parallel or Step Response Parallel $\alpha = \frac{1}{2RC}$ $s_{1,2} = -a \pm\sqrt{a^2 - (\omega_0)^2}$ Note: Not used if under-damped</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Spring-2022/Architecture-and-Assembly/Architecture-and-Assembly/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Spring-2022/Architecture-and-Assembly/Architecture-and-Assembly/</guid><description>#ArchAssembly
Topics [[Digital Circuits and Boolean Algebra]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Spring-2022/Architecture-and-Assembly/Digital-Circuits-and-Boolean-Algebra/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Spring-2022/Architecture-and-Assembly/Digital-Circuits-and-Boolean-Algebra/</guid><description>#ArchAssembly Graphical representation and further documentation is shown [[Intro to Digital Circuits.pdf|here]]
Boolean Operators We need to know how to write these&amp;hellip; Symbolically Multiplication table Digital circuits 1 is true, 0 is false AND is A×B × 0 1 0 0 0 1 0 1 OR is A+B + 0 1 0 0 1 1 1 1 Not is !</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Spring-2022/Data-Structures/Data-Structures/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Spring-2022/Data-Structures/Data-Structures/</guid><description>#DataStructures
Data Structures Topics [[Sets]] [[Maps and Graphs]] [[Hash Tables]] [[Final Study Guide (Data Structures)]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Spring-2022/Data-Structures/Set-Study-Guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Spring-2022/Data-Structures/Set-Study-Guide/</guid><description>#DataStructures #Spring2022 For some more detail, observe [[set_example.cpp|set example file]]
Weird names for stuff Add = Insert Remove = Delete Search = Count Union = Unique from both sets Intersection = only common from both sets Difference = Different from first set (ex.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Spring-2022/Data-Structures/set_example.cpp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Spring-2022/Data-Structures/set_example.cpp/</guid><description>#DataStructures
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 #include &amp;lt;iostream&amp;gt;#include &amp;lt;set&amp;gt;#include &amp;lt;algorithm&amp;gt; using namespace std; int main() { int num; set&amp;lt;int&amp;gt; set1, set2, set3, set4, set5, set6; cin &amp;gt;&amp;gt; num; for (int i = 0; i &amp;lt; num; i++) { int temp; cin &amp;gt;&amp;gt; temp; set1.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Spring-2022/Data-Structures/Sets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Spring-2022/Data-Structures/Sets/</guid><description>#DataStructures
Sets [[Set Study Guide]] [[set_example.cpp]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Spring-2022/Physical-Science/4-11-Elements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Spring-2022/Physical-Science/4-11-Elements/</guid><description>#PhysicalScience TODO: Rename appropriately
Bohr&amp;rsquo;s Theory Three rules Electrons only exist in certain allowed orbits Withing an orbit, the electron does not radiate Radiation is emitted or absorbed when changing orbits The Quantum Mechanics Model Principle Quantum Number (n) Angular Momentum Quantum Number (l) Spatial distribution Labeled s, p, d, f Magnetic Quantum Number (m) Spatial orientation of orbit Pauli Exclusion Principle Each electron has different quantum numbers Orbital Notation First 2 columns are s orbitals (plus helium bc reasons) Metallic block is d Right 6 are p (minus helium) Lanthanoids/Actinoids are f List in order when notating Remember when listing that d rows are labeled as (actual row) - 1 Examples: Hydrogen is 1s1 Helium is 1s2 Lithium is 1s22s1 Beryllium is 1s22s2 Boron is 1s22s22p1 Neon is 1s22s22p6 Sulfur is 1s22s22p63s23p4 Calcium is 1s22s22p63s23p64s2 Silver is 1s22s22p63s23p64s23d104p65s24d9 Bismuth is 1s22s22p63s23p64s23d104p65s24d105p66s25d106p3 etc.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Spring-2022/Physical-Science/Physical-Science/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Spring-2022/Physical-Science/Physical-Science/</guid><description>#PhysicalScience
Physical Science Topics [[4-11 (Elements)]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Spring-2022/Spring-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Spring-2022/Spring-2022/</guid><description>#Spring2022
Subject List: [[Data Structures]] [[Physical Science]] [[Architecture and Assembly]] [[Psychology]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Subtype-Polymorphism/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Subtype-Polymorphism/</guid><description>#OOP
See [[Inheritance|inheritance]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/The-Constitution/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/The-Constitution/</guid><description>The Constitution #AMGov
Issues Small States and Large States Small States wanted equal representation Large States wanted proportional representation This resulted in two legislative houses (House of Reps for proportional, Senate for equal) Federalists vs Anti-Federalists How Strong is too Strong?</description></item><item><title/><link>https://agsup.github.io/quartz/notes/The-Internet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/The-Internet/</guid><description>#WebDev The Internet != the Web
Called the world wide web even before it was made worldwide (right, but kind of pretentious)</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Todo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Todo/</guid><description>Todo Mail forwarding: email Reynolds key: email Colgrove: email</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Top-15-College-Proverbs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Top-15-College-Proverbs/</guid><description>Top 15 College Proverbs #Wisdom/Prophets
Topics Sleep Proverbs 20:13 and 3:21-24 Lesson and Meaning: If you have done well during the day, you&amp;rsquo;ll sleep better.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Types-of-Psalms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Types-of-Psalms/</guid><description>Types of Psalms #Wisdom/Prophets
Penitential Laments Structure Address to God Complaint Request Expression of Faith Takeaways These types of Psalms are about not accepting &amp;ldquo;cheap grace&amp;rdquo; It is an acknowledgement of sin, and an acceptance of responsibility You cannot forgive your own sins, this must be taken up to God Trying to regain God&amp;rsquo;s favor and do his work God&amp;rsquo;s grace is not &amp;ldquo;cheap&amp;rdquo;, but it is still given plentifully Imprecatory Psalms Psalms that ask God to bring curses upon enemies Goals include: Cursing Individuals Cursing Nations Divine Judgement Religious persecution Liberation for God&amp;rsquo;s Name&amp;rsquo;s Sake etc.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Untitled-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Untitled-1/</guid><description/></item><item><title/><link>https://agsup.github.io/quartz/notes/Untitled-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Untitled-2/</guid><description/></item><item><title/><link>https://agsup.github.io/quartz/notes/Untitled/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Untitled/</guid><description/></item><item><title/><link>https://agsup.github.io/quartz/notes/Web-Development/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Web-Development/</guid><description>#WebDev #Fall2022
[[The Internet]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/What-Even-Is-Love-Anyway/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/What-Even-Is-Love-Anyway/</guid><description>#rant Firstly, I guess I should talk about how I define love in a platonic sense. I feel like my definition of love is similar to yours in many ways, although I personally name it differently.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Wisdom-and-Prophets-Exam-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Wisdom-and-Prophets-Exam-1/</guid><description>Foundational Material: A friend comes to you with doubts concerning the existence of God. Explain to them the 4-5 sources of divine revelation that support the belief that we can know God, and then give 3 reasons why they can trust that the scriptures we have today are from God and were reliably copied and translated by humans.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Wisdom-and-Prophets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Wisdom-and-Prophets/</guid><description>Wisdom and Prophets #Wisdom/Prophets
[[Wisdom Literature]] [[Types of Psalms]] [[How to Raise a Fool]] [[Wisdom and Prophets Exam 1]] [[Top 15 College Proverbs]]</description></item><item><title/><link>https://agsup.github.io/quartz/notes/Wisdom-Literature/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Wisdom-Literature/</guid><description>Intro to Wisdom Literature #Wisdom/Prophets
3 Books Proverbs Job Ecclesiastes Context General truths (Proverbs 26:4-5) Observations about the world What is the wise thing to do given a situation?</description></item><item><title/><link>https://agsup.github.io/quartz/notes/WordCount/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/WordCount/</guid><description>Word Count Greg Supratman Weaknesses None that are notable, map was done to assignment Could have done extra credit, but studying seemed more important Strengths I feel good about my solutions and my formatting, to me it seems easily readable I watched a video about avoiding code nesting for organization, I feel like it helped my code readability in this assignment</description></item><item><title/><link>https://agsup.github.io/quartz/notes/World-Christian/First-Verse-Memorization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/World-Christian/First-Verse-Memorization/</guid><description>#WorldChristian have faith in me, and you will have life-giving water flowing from deep inside you, just as the Scriptures say.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/World-Christian/Jesus-and-the-Holy-Spirit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/World-Christian/Jesus-and-the-Holy-Spirit/</guid><description>Jesus and the Holy Spirit Luke 4 Led by the Spirit into the wilderness to be tempted (1-2) Returned in the power of the Spirit to Galilee (14-15) Regarded as nothing more than &amp;ldquo;Joseph&amp;rsquo;s son&amp;rdquo; Generally well liked, but not regarded as the Son of God John 3 How Jesus speaks to others about the Spirit Note: Pharisees were persecuted by the Romans for being too radical Nicodemus respected and learned from Jesus Decided to give Jesus a proper burial despite the view of his peers Calls out his peers as they give Jesus an unfair trial to save their skin Discussion with Jesus about being born again Water vs Spirit Spirit/WaterFleshSpirit-SpiritFlesh-Flesh Note: Sometimes it is impossible to baptize someone before death, but sometimes it is difficult but possible, in which case an attempt might be made John 10 Zoe: Real (eternal, genuine) life Bios: Biological/Physical life Bios mirrors Zoe, but in the same way that a picture or statue mirrors a person A man is naturally a creation, not a descendant, of God A man can have his Bios end, but continue through Zoe, which is obtained through the rebirth of baptism according to the Christian Faith Essentially, living only in bios is being a dead man walking Our Responsibility Are we and Undertaker or a Mid-wife?</description></item><item><title/><link>https://agsup.github.io/quartz/notes/World-Christian/Jesus-Divinity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/World-Christian/Jesus-Divinity/</guid><description>Jesus&amp;rsquo; Divinity</description></item><item><title/><link>https://agsup.github.io/quartz/notes/World-Christian/Jesus-Humanity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/World-Christian/Jesus-Humanity/</guid><description>Jesus&amp;rsquo; Humanity #WorldChristian
John 1 &amp;ldquo;Word&amp;rdquo;: logos/dao logos is a word with undefined meaning, John &amp;ldquo;baptizes&amp;rdquo; the word (gives it a holy meaning) John 1:1 outlines the Trinity In the beginning was the Word &amp;gt; The Word was with God The Word was God</description></item><item><title/><link>https://agsup.github.io/quartz/notes/World-Christian/Louis-Bassay/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/World-Christian/Louis-Bassay/</guid><description>Cross-Cultural Experiences Louis Bassay #WorldChristian About Louis Bassay: From Cameroon VBS for 1 month Destroyed Brazil in soccer Prayers: Civil War in Cameroon Household Code in Cameroon Husband and Wife To become a woman&amp;rsquo;s husband, the man must bring the woman&amp;rsquo;s family many items in order to earn her (this is known as a &amp;ldquo;bride price&amp;rdquo;) All women must be able to cook, and the men don&amp;rsquo;t cook Appearance in public Not particular, but affection is shown Parent and Children Appellation The young must call the old with respect (Uncle/Aunt/Daddy/Momma) Eye Contact Disrespectful to look directly in the eyes of an elder Verbal expression of love Never expressed verbally, but it is showed in other ways Social Responsibilities Greetings Very important, greetings must be expressly spoken and reciprocated, especially to elders Time Event-oriented, not time-oriented &amp;ldquo;White-man time&amp;rdquo; refers to time-oriented as opposed to event-oriented The guest closes the conversation Invitation The host pays the bill</description></item><item><title/><link>https://agsup.github.io/quartz/notes/World-Christian/Matthew-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/World-Christian/Matthew-3/</guid><description>Matthew 3 #WorldChristian
Analogies Verse 11 I baptize you with water for repentance. But after me comes one who is more powerful than I, whose sandals I am not worthy to carry.</description></item><item><title/><link>https://agsup.github.io/quartz/notes/World-Christian/The-Holy-Spirit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/World-Christian/The-Holy-Spirit/</guid><description>The Holy Spirit #WorldChristian
Goal: To emphasize the Holy Spirit and his work
as the driving force in both transforming</description></item><item><title/><link>https://agsup.github.io/quartz/notes/World-Christian/The-Work-of-the-Spirit-in-Acts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/World-Christian/The-Work-of-the-Spirit-in-Acts/</guid><description>The Work of the Spirit in Acts He loves Thee too little, who lives anything together with Thee, which he loves not for thy sake</description></item><item><title/><link>https://agsup.github.io/quartz/notes/World-Christian/The-Work-of-the-Spirit-in-the-Epistles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/World-Christian/The-Work-of-the-Spirit-in-the-Epistles/</guid><description>The Work of the Spirit in the Epistles Romans 5 Not just forgiven by God, but also loved by God Therefore, we can rejoice in suffering for Him First Adam doomed us all, Second Adam (Jesus) saved us all Choose a lineage Romans 7 Faith is like marriage One husband Bound by law Cheating is bad Man&amp;rsquo;s nature is to break laws and go against God Paul says, &amp;ldquo;For what I want to do I do not do, but what I hate I do.</description></item><item><title>Spring 2023</title><link>https://agsup.github.io/quartz/notes/Spring-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/Spring-2023/</guid><description>Subject List Software Engineering
American Government
World Christian
Wisdom and Prophets</description></item><item><title>World Christian Notes</title><link>https://agsup.github.io/quartz/notes/World-Christian/World-Christian/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://agsup.github.io/quartz/notes/World-Christian/World-Christian/</guid><description>The Holy Spirit
Matthew 3
Jesus&amp;rsquo; Humanity
Jesus&amp;rsquo; Divinity</description></item></channel></rss>